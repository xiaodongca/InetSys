<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans    
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd    
                        http://www.springframework.org/schema/context    
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd    
                        http://www.springframework.org/schema/mvc    
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">

	<!-- context:component-scan自动扫描这个包下面所有的子包或者java文件如果扫描到@Component@Controller@Service等这些注解的类，则把这些类注册为bean -->
	<context:component-scan base-package="com.pro" />

	<!-- 导入存放数据库的信息的xml文件 -->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:jdbc.properties</value>
			</list>

		</property>
	</bean>
	<!-- 连接数据库信息 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="url" value="${url}"></property>
		<property name="username" value="${username}"></property>
		<property name="password" value="${password}"></property>
		<property name="driverClassName" value="${driver}"></property>
	</bean>

	<!-- sqlSessionFactoty session工厂 创建并得到数据库会话 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="configLocation" value="classpath:config.xml"></property>
		<property name="mapperLocations" value="classpath:com/pro/mapper/*.xml"></property>
	</bean>
	<!-- 自动将dao和mapper一一对应 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.pro.dao"></property>
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>

	<!-- 事务管理 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<!-- 在实际开发中通常都需配置 mvc:annotation-driven标签,这个标签是开启注解 -->
	<mvc:annotation-driven></mvc:annotation-driven>
	
	
	<!-- 拦截器 多个拦截器，顺序执行 -->
	<mvc:interceptors>
		<!-- 权限验证拦截器 -->
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean class="com.pro.interceptor.PowerInterceptor">
				<property name="allowUrls">
					<list>
						<!-- 如果请求中包含以下路径，则不进行拦截 -->
						<value>/js</value>
						<value>/css</value>
						<value>/images</value>
					</list>
				</property>

			</bean>
		</mvc:interceptor>
		<!-- 登录验证拦截器 -->
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean class="com.pro.interceptor.LoginInterceptor">
				<property name="allowUrls">
					<list>
						<!-- 如果请求中包含以下路径，则不进行拦截 -->
						<value>/js</value>
						<value>/css</value>
						<value>/images</value>
					</list>
				</property>
			</bean>
		</mvc:interceptor>
	

	</mvc:interceptors>


</beans>  

